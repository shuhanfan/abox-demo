apiVersion: v1
kind: ConfigMap
metadata:
  name: generate-passwords
  namespace: pgo # {"$kpt-set":"namespace"}
  annotations:
    config.kubernetes.io/function: |-
      exec:
        path: fn/password.sh
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-postgres-secret # {"$kpt-set":"postgres-secret-name"}
  namespace: pgo # {"$kpt-set":"namespace"}
  labels:
    pg-cluster: postgres # {"$kpt-set":"cluster-name"}
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
type: Opaque
data:
  password: "NXhSb3k2TkVDdStVdERaOEdLNmtVOGVW"
  username: cG9zdGdyZXM=
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-primaryuser-secret # {"$kpt-set":"primaryuser-secret-name"}
  namespace: pgo # {"$kpt-set":"namespace"}
  labels:
    pg-cluster: postgres # {"$kpt-set":"cluster-name"}
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
type: Opaque
data:
  password: "K055amdwb3VHdC84QXFuZ0lkbVFMdXls"
  username: cHJpbWFyeXVzZXI=
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-testuser-secret # {"$kpt-set":"testuser-secret-name"}
  namespace: pgo # {"$kpt-set":"namespace"}
  labels:
    pg-cluster: postgres # {"$kpt-set":"cluster-name"}
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
type: Opaque
data:
  password: "Q29YODZDb3F3U2RmR1hlSEcyN2FjS1Qr"
  username: dGVzdHVzZXI=
