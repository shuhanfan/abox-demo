apiVersion: v1
kind: Namespace
metadata:
  name: pgo # {"$kpt-set": "namespace"}
  labels:
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pgo-deployer-sa
  namespace: pgo # {"$kpt-set":"namespace"}
  labels:
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgo-deployer-cm
  namespace: pgo # {"$kpt-set": "namespace"}
  labels:
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
data:
  values.yaml: |-
    ---
    archive_mode: "true"
    archive_timeout: "60"
    backrest_aws_s3_bucket: ""
    backrest_aws_s3_endpoint: ""
    backrest_aws_s3_key: ""
    backrest_aws_s3_region: ""
    backrest_aws_s3_secret: ""
    backrest_aws_s3_uri_style: ""
    backrest_aws_s3_verify_tls: "true"
    backrest_port: "2022"
    badger: "false"
    ccp_image_prefix: "registry.developers.crunchydata.com/crunchydata"
    ccp_image_pull_secret: ""
    ccp_image_pull_secret_manifest: ""
    ccp_image_tag: "centos7-12.4-4.4.1"
    create_rbac: "true"
    crunchy_debug: "false"
    db_name: ""
    db_password_age_days: "0"
    db_password_length: "24"
    db_port: "5432"
    db_replicas: "0"
    db_user: "testuser"
    default_instance_memory: "128Mi"
    default_pgbackrest_memory: "48Mi"
    default_pgbouncer_memory: "24Mi"
    delete_metrics_namespace: "false"
    delete_operator_namespace: "false"
    delete_watched_namespaces: "false"
    disable_auto_failover: "false"
    disable_fsgroup: "false"
    reconcile_rbac: "true"
    exporterport: "9187"
    namespace: "pgo"
    namespace_mode: "dynamic"
    pgbadgerport: "10000"
    pgo_add_os_ca_store: "false"
    pgo_admin_password: "examplepassword"
    pgo_admin_perms: "*"
    pgo_admin_role_name: "pgoadmin"
    pgo_admin_username: "admin"
    pgo_apiserver_port: "8443"
    pgo_apiserver_url: "https://postgres-operator"
    pgo_client_cert_secret: "pgo.tls"
    pgo_client_container_install: "false"
    pgo_client_version: "4.4.1"
    pgo_cluster_admin: "false"
    pgo_disable_eventing: "false"
    pgo_disable_tls: "false"
    pgo_image_prefix: "registry.developers.crunchydata.com/crunchydata"
    pgo_image_pull_secret: ""
    pgo_image_pull_secret_manifest: ""
    pgo_image_tag: "centos7-4.4.1"
    pgo_installation_name: "devtest"
    pgo_noauth_routes: ""
    pgo_operator_namespace: "pgo"
    pgo_tls_ca_store: ""
    pgo_tls_no_verify: "false"
    pod_anti_affinity: "preferred"
    pod_anti_affinity_pgbackrest: ""
    pod_anti_affinity_pgbouncer: ""
    scheduler_timeout: "3600"
    service_type: "ClusterIP"
    sync_replication: "false"
    backrest_storage: "hostpathstorage"
    backup_storage: "hostpathstorage"
    primary_storage: "hostpathstorage"
    replica_storage: "hostpathstorage"
    wal_storage: ""
    storage1_name: "hostpathstorage"
    storage1_access_mode: "ReadWriteMany"
    storage1_size: "1G"
    storage1_type: "create"
    storage2_name: "replicastorage"
    storage2_access_mode: "ReadWriteMany"
    storage2_size: "1G"
    storage2_type: "create"
    storage3_name: "nfsstorage"
    storage3_access_mode: "ReadWriteMany"
    storage3_size: "1G"
    storage3_type: "create"
    storage3_supplemental_groups: "65534"
    storage4_name: "nfsstoragered"
    storage4_access_mode: "ReadWriteMany"
    storage4_size: "1G"
    storage4_match_labels: "crunchyzone=red"
    storage4_type: "create"
    storage4_supplemental_groups: "65534"
    storage5_name: "storageos"
    storage5_access_mode: "ReadWriteOnce"
    storage5_size: "5Gi"
    storage5_type: "dynamic"
    storage5_class: "fast"
    storage6_name: "primarysite"
    storage6_access_mode: "ReadWriteOnce"
    storage6_size: "4G"
    storage6_type: "dynamic"
    storage6_class: "primarysite"
    storage7_name: "alternatesite"
    storage7_access_mode: "ReadWriteOnce"
    storage7_size: "4G"
    storage7_type: "dynamic"
    storage7_class: "alternatesite"
    storage8_name: "gce"
    storage8_access_mode: "ReadWriteOnce"
    storage8_size: "300M"
    storage8_type: "dynamic"
    storage8_class: "standard"
    storage9_name: "rook"
    storage9_access_mode: "ReadWriteOnce"
    storage9_size: "1Gi"
    storage9_type: "dynamic"
    storage9_class: "rook-ceph-block"
    alertmanager_custom_config: ""
    alertmanager_custom_rules_config: ""
    alertmanager_install: "true"
    alertmanager_log_level: "info"
    alertmanager_port: "9093"
    alertmanager_service_name: "crunchy-alertmanager"
    alertmanager_service_type: "ClusterIP"
    alertmanager_storage_access_mode: "ReadWriteOnce"
    alertmanager_storage_class_name: ""
    alertmanager_supplemental_groups: ""
    alertmanager_volume_size: "1Gi"
    grafana_admin_password: "admin"
    grafana_admin_username: "admin"
    grafana_dashboards_custom_config: ""
    grafana_datasources_custom_config: ""
    grafana_install: "true"
    grafana_port: "3000"
    grafana_service_name: "crunchy-grafana"
    grafana_service_type: "ClusterIP"
    grafana_storage_access_mode: "ReadWriteOnce"
    grafana_storage_class_name: ""
    grafana_supplemental_groups: ""
    grafana_volume_size: "1Gi"
    metrics_image_pull_secret: ""
    metrics_image_pull_secret_manifest: "" 
    metrics: "true"
    metrics_namespace: "pgo"
    prometheus_custom_config: ""
    prometheus_install: "true"
    prometheus_port: "9090"
    prometheus_service_name: "crunchy-prometheus"
    prometheus_service_type: "ClusterIP"
    prometheus_storage_access_mode: "ReadWriteOnce"
    prometheus_storage_class_name: ""
    prometheus_supplemental_groups: ""
    prometheus_volume_size: "1Gi"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: pgo-deploy
  namespace: pgo # {"$kpt-set":"namespace"}
  labels:
    app.kubernetes.io/name: postgres-operator # {"$kpt-set":"name"}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: pgo-deploy
    spec:
      serviceAccountName: pgo-deployer-sa
      restartPolicy: Never
      containers:
      - name: pgo-deploy
        image: registry.developers.crunchydata.com/crunchydata/pgo-deployer:centos7-4.4.1
        imagePullPolicy: IfNotPresent
        env:
        - name: DEPLOY_ACTION
          value: install
        volumeMounts:
        - name: deployer-conf
          mountPath: "/conf"
      volumes:
      - name: deployer-conf
        configMap:
          name: pgo-deployer-cm
